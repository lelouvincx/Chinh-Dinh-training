name: Testing Continuous Integration
run-name: ${{ github.actor }} is testing Github Actions

on: [push]

env:
  REGISTRY: ghcr.io
  UPSTREAM_APP_IMAGE_NAME: upstream-app
  KAFKA_CONNECT_IMAGE_NAME: kafka-connect

jobs:
  explore-github-actions:
    runs-on: ubuntu-22.04
    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."

      - run: echo "This job is now running on a ${{ runner.os }} server hosted by Github."

      - run: echo "The name of your branch is ${{ github.ref }}  and your repository is ${{ github.repository }}."

      - name: Checkout repository code
        uses: actions/checkout@v4

      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."

      - run: echo "The workflow is now ready to test your code on the runner."

      - name: List files in the repository
        run: |
          ls -lah ${{ github.workspace }}

      - run: echo "This job's status is ${{ job.status }}."

  check-changes-upstream-app:
    runs-on: ubuntu-22.04
    outputs:
      img: ${{ steps.changes.outputs.img }}
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v4

      - name: Check changes
        uses: dorny/paths-filter@v2
        id: changes
        with:
          base: ${{ github.ref }}
          ref: ${{ github.ref }}
          filters: |
            img:
              - ".docker/images/app/**"

  build-push-upstream-app:
    needs: check-changes-upstream-app
    if: ${{ needs.check-changes-upstream-app.outputs.img == 'true' }}
    runs-on: ubuntu-22.04

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository code
        uses: actions/checkout@v4

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3

      - name: Login to the container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.actor }}/${{ env.UPSTREAM_APP_IMAGE_NAME }}

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: .docker/images/app/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - run: echo "This job's status is ${{ job.status }}."
